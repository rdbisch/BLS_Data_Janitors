
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Courier; fontsize=18; labelloc=t
label=CleanDish_python1

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; color=white

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Courier]

/* Nodes representing atomic programs in workflow */
replaceNA [shape=record rankdir=LR label="{<f0> replaceNA |<f1> Replace empty strings with NA for easier pandas compute}"];
caseFix [shape=record rankdir=LR label="{<f0> caseFix |<f1> Convert to title case}"];
dedupDish [shape=record rankdir=LR label="{<f0> dedupDish |<f1> Identify duplicate entries in the _name_ field, and consolidate rows}"];
exportData [shape=record rankdir=LR label="{<f0> exportData |<f1> Write out results back to CSV}"];
importMenuItem [shape=record rankdir=LR label="{<f0> importMenuItem |<f1> Read in MenuItem}"];
replaceForeignKeys [shape=record rankdir=LR label="{<f0> replaceForeignKeys |<f1> Replace the duplicate entries' Foreign Keys with the new IDs}"];
exportMenuItem
exportTokens

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
Dish_clean [shape=record rankdir=LR label="{<f0> Dish_clean |<f1> file\:../01_openrefine/Dish_clean.csv.gz}"];
dish_1
dish_2
dish_3
MenuItem_clean [shape=record rankdir=LR label="{<f0> MenuItem_clean |<f1> file\:../01_openrefine/MenuItem_clean.csv.gz}"];
menuitem_1
menuitem_2
tokens [shape=record rankdir=LR label="{<f0> tokens |<f1> file\:tokens.csv}"];
Dish_clean_dedup [shape=record rankdir=LR label="{<f0> Dish_clean_dedup |<f1> file\:p02_dish_cleaned.csv.gz}"];
MenuItem_clean2 [shape=record rankdir=LR label="{<f0> MenuItem_clean2 |<f1> file\:../03_python/p02_MenuItem_cleaned.csv.gz}"];

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */

/* Edges representing connections between programs and channels */
replaceNA -> dish_1
Dish_clean -> replaceNA
caseFix -> dish_2
dish_1 -> caseFix
dedupDish -> dish_3
dish_2 -> dedupDish
exportData -> Dish_clean_dedup
dish_3 -> exportData
importMenuItem -> menuitem_1
MenuItem_clean -> importMenuItem
replaceForeignKeys -> menuitem_2
menuitem_1 -> replaceForeignKeys
exportMenuItem -> MenuItem_clean2
menuitem_2 -> exportMenuItem
exportTokens -> tokens
dish_3 -> exportTokens

/* End of double cluster for drawing box around nodes in workflow */
}}

/* End of top-level graph */
}
